12.03.08
 
Added the getTextHeightCGG function reference in pvc.text.getTextHeight, for server-side printing
[FIX] Heat-grid "sizeBy" dimension did not handle negative values correctly.
namespace support in pvc.define
Changed generatePvcBundle.sh script to read a scripts file list from the new pvcBundleFiles.txt file.
Slightly changed the pvc.define method to allow specifying the base class.
[FIX] Heat grid shape selection for 'square' and 'diamond' shapes 
[FIX] Heat grid drawing of diamond shape, did not fit the available cell
[FEAT] Axis titles
[FIX]  Fixed regression bug in pvc.number (failed to parse a null value as 0)
[FIX]  Fixed bug in the calculation of discrete orthogonal scales when the y axis is placed on the right
[BREAK] Any outside access to options.xAxisSize and options.yAxisSize will no longer work as these will no longer, in general, contain the default or final axes sizes         
	(the final axis size is now at: pvc.AxisPanel#axisSize and includes space for the axis title pvc.AxisPanel#titleSize)
[FEAT] Added documentation about the new options and extension points to testZZZ.html files
[FEAT] Added new example/test case to testBar.html to test the situation: nulls/crosstab format/stacked
[REFA] New file pvc.text.js
[REFA] Refactored text measuring code from pvc.AxisPanel and placed it in a new file pvc.text.js
[REFA] pvc.AxisPanel render code was split in layout code and render code. The reason is to support that default axis sizes may be assumed by the axes themselves and before 
creating the scales. On the other hand, render must be done after creating the scales. This implied refactoring the code in the two described phases
[FEAT] Added the ability to measure the height of text
[FEAT] Added the Golden Ratio constant: pvc.goldenRatio
Improvements to click and double-click handling on Dot/Line/Area charts 
New utility functions: pvc.arrayAppend, Object.create ECMA5 shim, pvc.mixin * Utility fucntion pvc.mergeDefaults now reads prototype inherited properties also
[FEAT] New chart 'margins' options with JSON {all: 20, /* top: left: right, bottom: */ } or CSS-like shorthand syntax (without measures) 
[FIX] Fixed dangling vars in ParallelCoordinates
[FEAT][BREAK] Line/Area/Dot charts (stacked or not) - selection support.
[FIX][BREAK] Linear axis ticks of categorical charts now inherit the color from pvRule (instead of a fixed black).
[BREAK] Normalized the interface of *extension point* property functions (doesn't affect action handlers, tooltipFormat, ...)
[BREAK] "scatterPanel_" extension points now receive the series pvc.Element, as first argument (used to receive the series index)
[BREAK] all other extension points now receive pvc.Datum, as first argument (used to receive: [stacked] the datum value or [non-stacked] an object with category and value properties)
[FIX]  When multiple series were drawn but one had less points than another, the one with less points wrongly drew zero points, which along with interpolating lines gave a false picture of the facts
[FEAT][REFA][BREAK] For categories, pvc.Element#value now contains a JS Date object when the chart has options timeSeries
	The new pvc.Element#rawValue property contains the raw value, as it comes from the data source.
	Note that pvc.Datum#elem.series or pvc.Datum#elem.category both return a pvc.Element.
	Only direct accesses to the #value property will be affected; action handlers, tooltip formats and the like still receive the raw value.
[FIX] Timeseries dimensions no longer parse the string date values multiple times (an operation which is quite slow).
[FIX] Fixed dangling 'err' variable in pvc.scaleTicks.
[FIX] Very basic JSON.stringify shim for "poor" enviroments (like server-side printing) (does a #toString...)
[FIX] Fixed regression bug, dots in stacked line charts where being clipped when placed off the content panel, but still inside the chart area (orthoFixedMin set detection).
[FIX] Rubber band (selection rectangle) is now disabled during animation
[FIX] Rubber band (selection rectangle) is now disabled during animation
[FEAT] Improved extension point handling; it is now possible to intercept (use the user extension plus internal logic) or lock an extension point (prevent its extension).
[FEAT] The Tipsy behavior now exposes the #tipMark property, which contains the mark currently being "hovered"; this allows to dynamically calculate 'gravity', for example, through a gravity function, supplied in the tipsySettings.
[FEAT] New Selection detection constructs (pvc.Shape, pvc.Line, pvc.Rect and pvc.Circle)
[FEAT] HeatGridChart now fills the mark#datum property
[REFA] HeatGridChart now uses the same selection detection function as do the other categorical charts


12.02.16

New chart type "NormalizedBarChart" (100% stacked/normalized/segmenred bar chart)
Added new "selectable" chart option that is false by default. Currently, selection is supported by BarChart/WaterfallChart and HeatGridChart.
Fixed Redmine Bug #193: BoxplotChart does not show box tooltips correctly
Fixed Redmine Bug #208: BarLine charts break when Independent Line Scale is set to false
Fixed Redmine Bug #298: Wrong extension point in ccc documentation
Fixed Redmine Bug #316 - Tooltips of Dots in line charts do not always appear
Fixed Redmine Bug #317 - Timeseries axes ticks, in some cases, get drawn far to the left, off the chart
Functions 'getZZZScale' now have a 'keyArgs'-like interface. This interface makes it easy to add new arguments to the functions.
Refactoring  pvcPanel.js into separate files.
Put classes in pvcCategoricalAbstract.js and pvcDataDimension.js into separate files
Fixed bug in value/label code of Categorical charts
Added support for value and label distinction, for title and subtitle, on the bullet chart.
Fixed ZOrder bug - did not detect correctly a new child with ZOrder already applied
Fixed tipsy tooltip issue with dots and lines hiding the tooltip imediately on mouseleave, which is incompatible with the point/unpoint pseudo-events, tipically used in these cases to attach the tipsy behavior.
Fixed pvc.mergeDefaults function that did copy specified options with an === undefined value	
Added logging of received Metadata and resultset to DataEngine.
Added logging of received options, in pvc.Base#preRender.    
DataDimension inherited code from Composite Ordinal Axes related to onversion of data to tree form and obtaining labels for its elements. New chart options 'getCategoryLabel' and 'getSeriesLabel'.
Click and Double-click in AxisPanel has been refactored to allow usage by other axis types, besides the composite axis (like linear and normal-ordinal).
Axis value selection is now integrated in the click event (and thus, xAxisClickAction and yAxisClickAction of HeatGrid have been removed).
Axis 'clickAction' and 'doubleClickAction' now receive an object argument that contains the properties: 'value', 'label', 'absValue', 'path', 'absLabel'. This breaks the previous interface of these handlers (its .toString method returns the 'value' property, to ensure some backward compatibility).
Ordinal axes have changed the type of "datum" that is passed to property functions. This can affect functions given tothe following extensions points: 'Ticks_', 'Label_', 'Grid_'. The "datum" received is equal to that described for the clickAction event handler.
Fixed bug in MetricAbstract that affected drawing of base linear axes.
Changed options handling by chart classes. They now all declare options in a static property called 'defaultOptions', which is handled in the instance constructor by the new function: pvc.mergeDefaults. This allowed that options would reach the root base class (which by difficulties in option handling in some cases were not passed to base classes), which was required so that the new "getLabel" options could reach the base class, by the time the DataEngine is created. This involved collecting all options of every chart class and placing a default for them in the defaultOptions object. Only options declared here are read from the user options.
Some refactoring of MultiValueTranslator.
Improved lasso selection, to behave better near min. width or height of selection rectangle (method _createSelectionOverlay lost the w and h arguments).
Fixed bug in the HeatGrid and Waterfall tooltip calculation code, that caused tooltips to be shown delayed one mark instance. To this end, a new method has been added to pv.Mark that allows defining a local mark property: 'localProperty'. This is in most situations a better choice that of using 'def', which isn't evaluated per instance of a Mark, but per build of a Mark.
Performance improvement on heatgrid: don't reevaluate tooltip when shapes are re-rendered
Solved lasso show delay
Fixed some bugs related to the timeSeries option being wrongly read on the panel or on the chart.
compositeAxis: issue with labels overlapping with map when aligned to the right
Fixed bug related to the last showTooltips change.
Normalized showTooltips option and tipsySettings options on Categorical charts.
Generalized categorical charts rubber band detection of selected data.
Added pvc.CategoricalAbstract#clearSelections method to support Pentaho Analyzer.
Solved missing ;





12.01.25 

Implemented Redmine Feature #107 - Control number of labels on the linear Axis for categorical charts (show "MinorTicks" option, including 2nd axis) 
Implemented Redmine Feature #108 - Control number of ticks on the linear Axis for categorical charts ("DesiredTickCount", including 2nd axis with independent scale) 
Implemented Redmine Feature #109 - Rounded maximum for linear axis in categorical charts ("DomainRoundMode" option, including 2nd axis with independent scale) 
Solved Redmine Issue #120 - Axis labels get cut off 
Solved Redmine Issue #78 - Fix the vertical order in which series are drawn, so that when applicable, they show from top to bottom.
Solved Redmine Issue #121 - Tooltips in barcharts do not appear if bars overflow.
Solved Redmine Issue #103 - Ordinal axis grids not being drawn
MultiValueTranslator: issue when no categories
Solved valueFormat receives numeric value, doesn't parse
Fixed typo of property name in LegendPanel 
Add multi-series barline support
useCompositeAxis compatible with flat arrays
vml namespace conflict: revert sparkline, declaration in protovis-msie no longer lazy
align horizontal text in composite vertical axis towards the chart; revert convention breaks in multiline conditional expressions
workaround issue in 16th decimal position in IE9 64bit
Fixed regression with bulletcharts being translated in 10px down
Added new (and some of the missing) documentation to the testZZZ.html files
Fixed the drawing of bars and grid lines on the ordinal scale: they were not centered with the tick and label 
In linear axis, made minorTicks "extend" (major)ticks, so that visibility (through .visible or .strokeStyle) of the later affects the former. 
testZZZ.html files documentation mencioned '{x,y}AxisFullGrid_' instead of the correct value'{x,y}AxisGrid_'.
Fixed linear axis grid to show a line on the last tick (as opposed to the ordinal axis, that does not show the last line). When EndLine is active, it is drawn above the last grid line.
Fixed bug in the positioning of linear scale labels that revealed it self (don't know why) only on time series charts * Fixed bug in time series scale range calculation when with a second axis * Fixed bug in the drawing of minor ticks on time series scales (date arithmetic issues)
Fixed regression bug in ScatterCharts (DotChart, LineChart, StackedLineChart and StackedAreaChart) that caused null values to break line drawing. 
Fixed the visibility of the first grid line of a time series axis - it did not show because, in this case, the first tick is not on the origin.
Fixed compatibility issue between jQuery.sparkline and protovis-msie when in IE8.
heatgrid: +scalingType:'discrete' (interval-based, no color interpolation)
tipsy w/ followMouse: don't fall out of window
Heatgrid: ignore null values in min/max calculations; nullShape not taking correct index into account;
solved dangling variable reference



