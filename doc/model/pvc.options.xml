<?xml version="1.0" encoding="UTF-8"?>
<c:model 
    xmlns:c="urn:webdetails/com/2012" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="urn:webdetails/com/2012 ../schema/com_2012.xsd"
    xmlns="http://www.w3.org/1999/xhtml">

    <c:complexType name="BaseChartOptions" space="pvc.options" abstract="true">
    
        <c:documentation>
            The chart options <i>applicable</i>
            to all charts.
        </c:documentation>
        
        <c:property name="canvas" type="string object" category="General">
            <c:documentation>
                The identifier of the HTML element, 
                or the element itself,
                where the chart is to be created in.
                
                The chart element will be a child of
                the canvas element.
                
                When unspecified, the chart
                element will be added as the 
                last child of the HTML document body.
            </c:documentation>
        </c:property>
        
        <!-- Behavior -->
        <c:property name="compatVersion" type="number" default="Infinity" category="Behavior">
            <c:documentation>
                The CCC version that the chart should run in.
                
                The value <tt>1</tt> emulates version 1 of CCC.
            </c:documentation>
        </c:property>
        
        <!-- Layout -->
        <c:property name="width" type="number" default="400" category="Layout">
            <c:documentation>
                The width of the chart, in pixels.
            </c:documentation>
        </c:property>
        
        <c:property name="height" type="number" default="300" category="Layout">
            <c:documentation>
                The height of the chart, in pixels.
            </c:documentation>
        </c:property>
        
        <c:property name="orientation" type="string" default="vertical" category="Layout">
            <c:documentation>
                The chart orientation indicates if 
                its main direction should be laid out
                vertically or horizontally.
                This property is supported by most chart types. 
            </c:documentation>
        </c:property>
        
        <!--
        margins:  undefined,
        paddings: undefined,
        contentMargins:  undefined,
        contentPaddings: undefined, 
         -->
        
        <!-- Style -->
        
        <!-- MultiChart -->
        <!-- 
        multiChartMax: undefined,
        multiChartMaxColumns: undefined,
        multiChartWidth: undefined,
        multiChartAspectRatio: undefined,
        multiChartSingleRowFillsHeight: undefined,
        multiChartSingleColFillsHeight: undefined,
        multiChartMaxHeight: undefined,
         -->
        
        <!-- Panels -->
        <!--
            legend ...
            title ... 
         -->
         
        <!-- Interactivity -->
        <c:property name="animate" type="boolean" default="true" category="Interactivity">
            <c:documentation>
                Indicates if a chart should show an entry animation, 
                every time it is rendered.
                Most charts perform some sort of entry animation 
                of its main visual elements.
            </c:documentation>
        </c:property>
        
        <c:property name="clickable" type="boolean" default="false" category="Interactivity">
            <c:documentation>
                Indicates if the chart is clickable by the user.
                
                If this option is <tt>false</tt>, 
                any click-related actions will not be executed 
                (ex: 
                <c:link href="#clickAction" />,
                <c:link href="#doubleClickAction" />, or
                <c:link href="pvc.options.DiscreteAxisOptions#clickAction" />).
            </c:documentation>
        </c:property>
        
        <c:property name="hoverable" type="boolean" default="false" category="Interactivity">
            <c:documentation>
                Indicates if the chart's visual elements
                are automatically highlighted 
                when the user hovers over them with the mouse.
            </c:documentation>
        </c:property>
        
        <c:property name="selectable" type="boolean" default="false" category="Interactivity">
            <c:documentation>
                Indicates if the chart's visual elements
                can be selected by the user, 
                by clicking on them 
                or using the rubber-band.
            </c:documentation>
        </c:property>
        
        <c:property name="showTooltips" type="boolean" default="true" category="Interactivity">
            <c:documentation>
                Indicates if tooltips are shown
                when the user hovers over visual elements with the mouse.
            </c:documentation>
        </c:property>
        
        <c:property name="ctrlSelectMode" type="boolean" default="true" category="Interactivity">
            <c:documentation>
                When <tt>true</tt>, 
                indicates that a selection made by the user 
                replaces the current selection, if any.
                
                For the selection to be additive, 
                the <tt>CTRL</tt> key must be pressed, 
                by the end of the operation.
                
                When <tt>false</tt>,
                indicates that any selection made by the user is additive.
                The <tt>CTRL</tt> key has no effect.
            </c:documentation>
        </c:property>
        
        <c:property name="clearSelectionMode" 
                    type="ClearSelectionMode" 
                    default="emptySpaceClick" 
                    category="Interactivity">
            <c:documentation>
            
                Controls if and how the selection can be cleared by the user.
            </c:documentation>
        </c:property>
        
        <c:property name="doubleClickMaxDelay" type="number" default="300" category="Interactivity">
            <c:documentation>
                The maximum number of milliseconds,
                between two consecutive clicks,
                for them to be considered a double-click.
            </c:documentation>
        </c:property>
        
        <c:property name="tooltipFormat" type="function" category="Interactivity">
            <c:documentation>
                A callback function that is called,
                to build the tooltip of a visual element.
                
                The function signature is:
                <tt>string function(pvc.visual.Context this, pvc.visual.Scene scene)</tt>.
            </c:documentation>
        </c:property>
        
        <c:property name="tipsySettings" type="TooltipOptions" category="Interactivity">
            <c:documentation>
                Contains tooltip presentation options.
            </c:documentation>
        </c:property>
        
        <!-- Actions -->
        <c:property name="renderCallback" type="function" category="Actions">
            <c:documentation>
                A callback function that is called
                before the chart is rendered,
                but after if has been pre-rendered.
                
                You can use this action to:
                <ul>
                    <li>use the _mark events_ API on time-series categorical charts</li>
                    <li>extend in special ways the already created protovis marks.</li>
                </ul>
                
                The function signature is:
                <tt>undefined function(pvc.visual.Context this)</tt>.
            </c:documentation>
        </c:property>
        
        <c:property name="clickAction" type="function" category="Actions">
            <c:documentation>
                A callback function that is called,
                when the user clicks on a visual element.
                
                The function signature is:
                <tt>undefined function(pvc.visual.Context this, pvc.visual.Scene scene)</tt>.
            </c:documentation>
        </c:property>
        
        <c:property name="doubleClickAction" type="function" category="Actions">
            <c:documentation>
                A callback function that is called,
                when the user double-clicks on a visual element.
                
                The function signature is:
                <tt>undefined function(pvc.visual.Context this, pvc.visual.Scene scene)</tt>.
            </c:documentation>
        </c:property>
        
        <c:property name="selectionChangedAction" type="function" category="Actions">
            <c:documentation>
                A callback function that is called
                when, after selection has changed,
                the chart is updated to reflect the change.
                
                The function signature is:
                <tt>undefined function(pvc.visual.Context this, pvc.data.Datum[] selectedDatums)</tt>.
                The argument <tt>selectedDatums</tt>
                is an array with the resulting selected datums.
            </c:documentation>
        </c:property>
        
        <c:property name="userSelectionAction" type="function" category="Actions">
            <c:documentation>
                A callback function that is called
                when the user performs a selection,
                but before the corresponding datums' selected state are actually changed.
                
                This function is usefull to restrict, amplify, or normalize the selection.
                
                The function signature is:
                <tt>pvc.data.Datum[] function(pvc.visual.Context this, pvc.data.Datum[] selectingDatums)</tt>.
                
                The argument <tt>selectingDatums</tt>
                is an array with the datums that will be selected by the current operation.
                The function should return the datums that should be actually selected.
            </c:documentation>
        </c:property>
        
        <!-- Extension points -->
        <!-- extensionPoints: undefined, -->
        
        <!-- Roles -->
        <!-- visualRoles: undefined -->
        
        <!-- Data -->
        <c:property name="ignoreNulls" type="boolean" default="true" category="Data">
            <c:documentation>
                Indicates if datums
                whose value of all measure dimensions is null 
                should be ignored.
                
                A dimension is considered a measure dimension if 
                there is at least one measure role currently bound to it.
            </c:documentation>
        </c:property>
        
        <c:property name="timeSeries" type="boolean" default="false" category="Data">
            <c:documentation>
                Indicates that dimensions of the "category" group 
                (i.e. named <tt>category</tt>, <tt>category2</tt>, ...)
                have a <tt>Date</tt> value type,
                by default.
                
                This option has no effect on other dimensions,
                even if bound to a "category" visual role.
                In those cases,
                explicitly define the dimension with
                the <tt>Date</tt> value type.
                
                Dimensions are considered continuous, by default,
                when they have a continuous value type.
                However, 
                not all visual roles support continuous dimensions.
                In those cases, 
                the dimension is treated as a discrete dimension,
                event though it has a continuous value type.
            </c:documentation>
        </c:property>
        
        <c:property name="timeSeriesFormat" type="string" default="%Y-%m-%d" category="Data">
            <c:documentation>
                The format string used by default to <i>parse</i>
                dimensions of the <tt>Date</tt> value type.
                
                The syntax of the format string is that of 
                <i>protovis</i>' date formats.
                
                This property changes the default of the 
                <c:link href="pvc.options.DimensionOptions#rawFormat" />
                
                 property,
                for dimensions with a <tt>Date</tt> value type.  
            </c:documentation>
        </c:property>
        
        <!-- 
             dimensions:        undefined,
             dimensionGroups:   undefined,
             
             groupedLabelSep:   ' ~ ' 
             valueFormat:
             percentValueFormat:
        -->
        
        <!-- Data Translation -->
        <c:property name="crosstabMode" type="boolean" default="true" category="Data Translation">
            <c:documentation>
                Indicates if the data source is in <i>crosstab</i> format.
            </c:documentation>
        </c:property>
        
        <c:property name="seriesInRows" type="boolean" default="false" category="Data Translation">
            <c:documentation>
                Indicates if, 
                in the data source, 
                the "series" data is in the rows, 
                instead of, as is more usual, in the columns.
                
                The name of this option is inspired in 
                the <i>crosstab</i> format, 
                where the "series" values are placed in the first row,
                and "category" values are placed in the first column
                (corner cell is empty).
                
                When this option is <tt>true</tt>, in the <i>crosstab</i> format,
                the result is equivalent to transposing the data table,
                which results in "series" data being placed in the first column,
                i.e. <i>in the rows</i>, 
                and the "category" data being placed in the first row.
                
                In the <i>relational</i> data source format, 
                this option effects a conceptually equivalent operation,
                by switching the "series" and "category" columns.
            </c:documentation>
        </c:property>
        
        <c:property name="multiChartIndexes" type="number string" default="true" category="Data Translation">
            <c:documentation>
                The indexes of the data source's <i>virtual item</i> columns
                that are to feed the 
                default 
                <tt>multiChart</tt>, 
                <tt>multiChart2</tt>, ... 
                dimensions.
            </c:documentation>
        </c:property>
        
        <c:property name="isMultiValued" type="boolean" default="false" category="Data Translation">
            <c:documentation>
                Indicates if the data source has 
                multiple value dimensions.
            </c:documentation>
        </c:property>
        
        <c:property name="measuresIndexes" type="number string list(number string)" default="true" category="Data Translation">
            <c:documentation>
                The indexes of the data source's <i>virtual item</i> columns
                that are to feed the 
                default 
                <tt>value</tt>, 
                <tt>value2</tt>, ... 
                dimensions.
                
                This option only applies to data sources in 
                relational format with multiple values, 
                i.e., 
                when 
                <tt>crosstabMode=false</tt> and 
                <tt>isMultiValued=true</tt>.
            </c:documentation>
        </c:property>
        
        <!--
        dataOptions: undefined,
        readers
        -->
    </c:complexType>

    <c:complexType name="CartesianChartOptions" 
                   space="pvc.options"
                   base="pvc.options.BaseChartOptions" 
                   abstract="true">
        <c:documentation>
            The base options type for the cartesian charts.
        </c:documentation>
    </c:complexType>
    
    <c:complexType name="CategoricalChartOptions" 
                   space="pvc.options"
                   base="pvc.options.BaseChartOptions" 
                   abstract="true">
        <c:documentation>
            The base options type for the cartesian charts.
        </c:documentation>
    </c:complexType>
    
    <c:complexType name="BarAbstractChartOptions" 
                   space="pvc.options"
                   base="pvc.options.CategoricalChartOptions" 
                   abstract="true">
        <c:documentation>
            The base options type for the Bar family charts.
        </c:documentation>
        <c:property name="panelSizeRatio" type="number" default="0.9" category="Layout">
            <c:documentation>
             Percentage of occupied space over total space 
             in a discrete axis band.
             
             The remaining space will be of 
             margins between bands.
            </c:documentation>
        </c:property>
    </c:complexType>
    
    <c:complexType name="LineDotAreaAbstractChartOptions" 
                   space="pvc.options" 
                   base="pvc.options.CategoricalChartOptions"
                   abstract="true">
        <c:documentation>
            The base options type for the Line/Dot/Area family charts.
        </c:documentation>
    </c:complexType>
    
    <c:complexType name="TooltipOptions" space="pvc.options">
        <c:documentation>
            Options related to the tooltip presentation.
        </c:documentation>
    </c:complexType>
    
    <c:atomType name="ClearSelectionMode" space="pvc.options" base="string">
        <c:documentation>
            Controls if and how the selection can be cleared by the user.
        </c:documentation>
        
        <c:atom value="manual">
            <c:documentation>
                The user has no way to explicitly fully clear the selection.
                
                It is still possible to clear the selection,
                if the selection behavior performs a toggling operation.
                
                Selection can always be cleared by code.
            </c:documentation>
        </c:atom>
        
        <c:atom value="emptySpaceClick">
            <c:documentation>
                The user can click on any <i>empty area</i>
                <i>inside</i> the chart to clear the selection.
            </c:documentation>
        </c:atom>
    </c:atomType>
    
</c:model>