<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" 
        targetNamespace="urn:webdetails/com/2012" 
        xmlns:com="urn:webdetails/com/2012" 
        elementFormDefault="qualified">
    
    <!-- 
        List(number) 
        
        Union(string number)
        
        Union(string number List(number))
        
        List(Union(string number))
        
        Union(string number List(Union(string number))
        
        Map(string Object)
        
        Invalid combinations:
          X  List(List(.))
          X  List(Union(List(.) number))
          X  Map(string Map(.))       ??? TODO
          X  Map(string List(Map(.))) ???
          
          X  cycles...
          
        ......................................................
         
                /
          Value | * name  (Lists and Unions may be anonymous)
            ^   \
            |
            |              /
            |....... Union | * types -> Value
            |              \
            |
            |              /
            |....... List  | * elementType -> Item
            |              \
            |
            |              /
            |....... Map   | * keyType   -> Item
            |              | * valueType -> Item // TODO need this restriction?
            |              \
            |
            +....... Item
                       ^
                       |
                       |                     /
                       |.......... ItemUnion | * types -> Item
                       |                     \
                       |
                       |.......... Atom
                       |             ^
                       |             |
                       |             +...... Primitive
                       |
                       |                   /
                       +.......... Complex | * abstract
                                        |  | * baseType -> Complex 
                                        |  \
                                        |                     /
                                        |                     | * name
                                        +........ >> Property | * required
                                                              | * default
                                                              \ 
     -->
     
    <element name="model" type="com:ModelType">
        <key name="complexType_unique_name">
            <selector xpath="com:complexType" />
            <field xpath="@space" />
            <field xpath="@name" />
        </key>
        
        <key name="atomType_unique_name">
            <selector xpath="com:atomType" />
            <field xpath="@name" />
        </key>
        
        <key name="atom_unique_name">
            <selector xpath="com:atomType/com:atom" />
            <field xpath="@name" />
        </key>
        
        <key name="atom_unique_value">
            <selector xpath="com:atomType/com:atom" />
            <field xpath="@value" />
        </key>
        
        <key name="funType_unique_name">
            <selector xpath="com:functionType" />
            <field xpath="@name" />
        </key>
        
        <key name="space_unique_name">
            <selector xpath="com:space" />
            <field xpath="@name" />
        </key>
        
        <unique name="model_documentation_format_key">
           <selector xpath="." />
           <field xpath="documentation/@format" />
        </unique>
        
        <unique name="class_documentation_format_key">
           <selector xpath="com:complexType" />
           <field xpath="documentation/@format" />
        </unique>
        
        <unique name="property_documentation_format_key">
           <selector xpath="com:complexType/property" />
           <field xpath="documentation/@format" />
        </unique>
        
        <!-- does not work because of namespace being split in class_key 
        <keyref name="class_keyref" refer="com:class_key">
            <selector xpath="com:complexType" />
            <field xpath="@base" />
        </keyref>
         -->
    </element>
    
    <!-- Elements to be used inside c:documentation elements -->
    <element name="link">
        <complexType>
            <attribute name="to" type="string" use="required" />
        </complexType>
    </element>
    
    <element name="example">
        <complexType mixed="true">
	        <sequence minOccurs="0" maxOccurs="unbounded">
	            <any namespace="##any" processContents="lax" />
	        </sequence>
        </complexType>
    </element>
    
    
    <!-- Model XSD types -->
    
    <complexType name="ModelType">
        <sequence>
            <element name="documentation" type="com:DocumentationType" minOccurs="0" maxOccurs="unbounded" />
            <choice minOccurs="0" maxOccurs="unbounded">
                <element name="space" type="com:SpaceType" />
	            <element name="complexType" type="com:ComplexTypeType" />
	            <element name="atomType" type="com:AtomTypeType" />
	            <element name="functionType" type="com:FunctionTypeType" />
	       </choice>
       </sequence>
    </complexType>
    
    <complexType name="SpaceType">
        <sequence>
            <element name="documentation" type="com:DocumentationType" minOccurs="0" maxOccurs="unbounded" />
       </sequence>
       <attribute name="name" type="com:IdType" use="required" />
    </complexType>
    
    <complexType name="ComplexTypeType">
        <sequence>
            <element name="documentation" type="com:DocumentationType" minOccurs="0" maxOccurs="unbounded" />
            <element name="property" type="com:PropertyType" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="name" type="com:IdType" use="required" />
        <attribute name="space" type="string" />
        <attribute name="base" type="com:IdType" />
        <attribute name="abstract" type="boolean" default="false" />
    </complexType>
    
    <complexType name="PropertyType">
        <sequence>
            <element name="documentation" type="com:DocumentationType" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="name" type="com:IdType" use="required" />
        <attribute name="type" type="com:ValueTypeType" default="string" />
        <attribute name="required" type="boolean" default="false" />
        <attribute name="default" type="anySimpleType" />
        <attribute name="category" type="string" />
    </complexType>
    
    <complexType name="AtomTypeType">
        <sequence>
            <element name="documentation" type="com:DocumentationType" minOccurs="0" maxOccurs="unbounded" />
            <element name="atom" type="com:AtomType" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="name" type="com:IdType" use="required" />
        <attribute name="space" type="string" />
        <attribute name="base" type="com:IdType" />
    </complexType>
    
    <complexType name="AtomType">
        <sequence>
            <element name="documentation" type="com:DocumentationType" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="name"  type="com:IdType" use="required" />
        <attribute name="value" type="anySimpleType" use="required" />
    </complexType>
    
    <complexType name="FunctionTypeType">
        <sequence>
            <element name="documentation" type="com:DocumentationType" minOccurs="0" maxOccurs="unbounded" />
            <element name="argument" type="com:ArgumentType" minOccurs="0" maxOccurs="unbounded" />
            <element name="returns"  type="com:ReturnType" minOccurs="0" maxOccurs="1" />
        </sequence>
        
        <attribute name="name"  type="com:IdType" use="required" />
        <attribute name="space" type="string" />
    </complexType>
    
    <complexType name="ArgumentType">
        <sequence>
            <element name="documentation" type="com:DocumentationType" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="name" type="com:IdType" use="required" />
        <attribute name="type" type="com:ValueTypeType" use="optional" default="undefined" />
        <attribute name="required" type="boolean" default="false" />
        <attribute name="default" type="anySimpleType" use="optional" />
    </complexType>
    
    <complexType name="ReturnType">
        <sequence>
            <element name="documentation" type="com:DocumentationType" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="type" type="com:ValueTypeType" use="optional" default="undefined" />
    </complexType>
    
    <complexType name="DocumentationType" mixed="true">
        <sequence minOccurs="0" maxOccurs="unbounded">
            <any namespace="##any" processContents="lax" />
        </sequence>
        
        <attribute name="format" type="com:DocumentationFormatType" use="optional" />
    </complexType>
    
    <simpleType name="ValueTypeType">
        <union memberTypes="com:PrimitiveTypeType string" />
    </simpleType>
    
    <simpleType name="PrimitiveTypeType">
        <restriction base="string">
            <enumeration value="undefined" />
            <enumeration value="literal" />
            <enumeration value="string" />
            <enumeration value="number" />
            <enumeration value="boolean" />
            <enumeration value="object" />
            <enumeration value="function" />
            <enumeration value="date" />
            <enumeration value="percentage" />
        </restriction>
    </simpleType>
    
    <simpleType name="IdType">
        <restriction base="NMTOKEN" />
    </simpleType>
    
    <simpleType name="DocumentationFormatType">
        <restriction base="string">
           <enumeration value="markdown" />
           <enumeration value="jsdoc" />
           <enumeration value="com" />
        </restriction>
    </simpleType>
</schema>